{"version":3,"sources":["components/AcercaDe/AcercaDe.tsx","components/Footer/Footer.tsx","components/Navbar/Navbar.tsx","components/Presentacion/Presentacion.tsx","components/PrimerPrograma/PrimerPrograma.tsx","components/SegundoPrograma/SegundoPrograma.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AcercaDe","className","href","title","src","width","height","frameBorder","allowFullScreen","Component","Presentacion","Navbar","page","useParams","to","CoordenadasIniciales","A","B","C","D","R","PrimerPrograma","state","a","b","c","d","logica","brd","suspendUpdate","create","size","name","straightFirst","straightLast","lastArrow","strokeColor","unsuspendUpdate","actualizarCampo","e","setState","nuevoEstado","target","Number","value","toUpperCase","newGraph","randomBytes","toString","type","id","this","step","onChange","logic","boardAttributes","axis","boundingbox","showCopyright","style","border","SegundoPrograma","ejemplosPredefinidos","vecU","THREE","vecV","vecW","vecWV","vecUW","vecUV","vecUVW","productoCruzUV","productoCruzVW","productoCruzUW","inputType","etiquetasVectoresActivadas","etiquetasEjesActivadas","etiquetasCoordenadasActivadas","minValue","maxValue","area","volumen","crearEtiqueta","nombre","x","y","z","clase","divEtiqueta","document","createElement","textContent","etiqueta","CSS2DObject","position","set","restablecer","addVectors","add","crossVectors","Math","abs","length","dot","activarEjemplo","ejemploEncontrado","find","ejemploActual","estadoAnterior","cambiarEstadoEtiqueta","vertices","Float32Array","scene","camera","window","innerWidth","innerHeight","updateProjectionMatrix","min","ejeZPos","clone","normalize","ejeZNeg","ejeXPos","ejeXNeg","ejeYPos","ejeYNeg","grid","geometry","setAttribute","material","color","wireframe","paralelepipedo","etiquetaEjeXPos","etiquetaEjeXNeg","etiquetaEjeYPos","etiquetaEjeYNeg","etiquetaEjeZPos","etiquetaEjeZNeg","etiquetaVecU","etiquetaVecV","etiquetaVecW","etiquetaVecWV","etiquetaVecUW","etiquetaVecUV","etiquetaVecUVW","index","etiquetaNumX","String","etiquetaNumXNeg","etiquetaNumY","etiquetaNumYNeg","etiquetaNumZ","etiquetaNumZNeg","elemento","getElementById","hasChildNodes","innerHTML","renderer","antialias","setSize","labelRenderer","CSS2DRenderer","domElement","outline","appendChild","OrbitControls","reset","animate","requestAnimationFrame","render","checked","onClick","max","map","ejemploPredefinido","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8998095f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AcercaDe.css\";\n\nclass AcercaDe extends Component {\n  render() {\n    return (\n      <div className=\"acerca-de\">\n        <h1>Acerca De</h1>\n        <p>\n          Este sitio contiene todas los programas y proyectos desarrollados para\n          la materia de <strong>Análisis Vectorial</strong>\n          en <strong>ESCOM</strong>, impartida por el{\" \"}\n          <strong>Dr. Dárwin Gutiérrez Mejía</strong> durante el período Febrero\n          a Junio de 2021. La intención principal es, además de desarrollar los\n          programas que el profesor nos propone para complementar nuestra\n          formación académica, generar una herramienta de fácil acceso para\n          cualquiera al que le pueda ser de utilidad.\n        </p>\n        <hr></hr>\n        <h2>\n          <i>Stack</i> tecnológico\n        </h2>\n        <p>\n          En esta sección se incluye información acerca del proyecto y de los\n          distintos recursos que se utilizaron para su realización.\n        </p>\n        <ul>\n          <li>React</li>\n          <li>JSXGraph</li>\n          <li>ThreeJS</li>\n        </ul>\n        <hr></hr>\n        <h2>Alumno</h2>\n        <ul>\n          <li>\n            <strong>Nombre</strong>: Humberto Alejandro Ortega Alcocer\n          </li>\n          <li>\n            <strong>Boleta</strong>: 2016630495\n          </li>\n          <li>\n            <strong>Semestre</strong>: Febrero - Junio, 2021\n          </li>\n        </ul>\n        <hr></hr>\n        <h2>Código Fuente</h2>\n        <p>\n          Si detectas que existe algún error, no dudes en reportar el{\" \"}\n          <i>issue</i> en GitHub.\n        </p>\n        <a href=\"https://github.com/humbertowoody/analisis-vectorial-escom\">\n          https://github.com/humbertowoody/analisis-vectorial-escom\n        </a>\n        <div className=\"estilo-1\">\n          <iframe\n            title=\"GIF Mágico\"\n            src=\"https://giphy.com/embed/3o7WIxxI7tLStjR2p2\"\n            width=\"100%\"\n            height=\"100%\"\n            className=\"estilo-2 giphy-embed\"\n            frameBorder=\"0\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcercaDe;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Presentacion() {\n  return (\n    <footer className=\"footer\">\n      <p>Análisis Vectorial - Humberto Alcocer - 2021</p>\n      <p>\n        Código fuente en GitHub:{\" \"}\n        <a href=\"https://github.com/humbertowoody/analisis-vectorial-escom\">\n          https://github.com/humbertowoody/analisis-vectorial-escom\n        </a>\n      </p>\n    </footer>\n  );\n}\n\nexport default Presentacion;\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n    const params: any = useParams();\n    const page = params.page || '/analisis-vectorial-escom';\n\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"title\" to=\"/analisis-vectorial-escom\">Análisis Vectorial</Link>\n            <div className=\"links\">\n                <Link to=\"/analisis-vectorial-escom/primer-programa\" className={page === 'analisis-vectorial-escom/primer-programa' ? 'active-link' : ''}>Primer Programa</Link>\n                <Link to=\"/analisis-vectorial-escom/segundo-programa\" className={page === 'analisis-vectorial-escom/segundo-programa' ? 'active-link' : ''}>Segundo Programa</Link>\n                <Link to=\"/analisis-vectorial-escom/acerca-de\" className={page === 'analisis-vectorial-escom/acerca-de' ? 'active-link' : ''}>Acerca De</Link>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport './Presentacion.css';\n\nfunction Presentacion() {\n  return (\n    <header className=\"presentacion\">\n      <h1>Análisis Vectorial</h1>\n      <p>Profesor: Dr. Dárwin Gutiérrez Mejía</p>\n    </header>\n  );\n}\n\nexport default Presentacion;","import { randomBytes } from \"crypto\";\nimport JXGBoard from \"jsxgraph-react-js\";\nimport React, { Component } from \"react\";\nimport \"./PrimerPrograma.css\";\n\n/**\n * Las coordenadas iniciales para los vectores.\n */\nexport const CoordenadasIniciales: any = {\n  A: [2, 2],\n  B: [-2, 2],\n  C: [-2, -2],\n  D: [2, -2],\n  R: [0, 0],\n};\n\n/**\n * El primer programa de la materia.\n */\nclass PrimerPrograma extends Component {\n  // Definición del estado inicial.\n  state = {\n    a: 1,\n    b: 1,\n    c: 1,\n    d: 1,\n    A: [2, 2],\n    B: [-2, 2],\n    C: [-2, -2],\n    D: [2, -2],\n    R: [0, 0],\n  };\n\n  logica = (brd: any) => {\n    // Extraemos las variables del estado.\n    let { A, B, C, D, R } = this.state;\n\n    // Suspendemos la actualización del chart.\n    brd.suspendUpdate();\n\n    // Graficamos las leyendas para cada vector.\n    brd.create(\"point\", A, { size: 0, name: \"A\" });\n    brd.create(\"point\", B, { size: 0, name: \"B\" });\n    brd.create(\"point\", C, { size: 0, name: \"C\" });\n    brd.create(\"point\", D, { size: 0, name: \"D\" });\n    brd.create(\"point\", R, { size: 0, name: \"R\" });\n\n    // Graficamos los vectores.\n    brd.create(\"line\", [[0, 0], A], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: \"blue\",\n      name: \"A\",\n    });\n    brd.create(\"line\", [[0, 0], B], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: \"blue\",\n    });\n    brd.create(\"line\", [[0, 0], C], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: \"blue\",\n    });\n    brd.create(\"line\", [[0, 0], D], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: \"blue\",\n    });\n\n    brd.create(\"line\", [[0, 0], R], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: \"red\",\n    });\n\n    // Reanudamos la actualización del chart.\n    brd.unsuspendUpdate();\n  };\n\n  actualizarCampo = (e: any) => {\n    this.setState((state) => {\n      // Creamos el nuevo estado.\n      const nuevoEstado: any = state;\n\n      // Asignamos el valor que puso el usuario.\n      nuevoEstado[e.target.name] = Number(e.target.value);\n\n      // Calculamos el valor para el vector correspondiente.\n      nuevoEstado[e.target.name.toUpperCase()] = [\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][0],\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][1],\n      ];\n\n      // Calculamos el nuevo valor para la resultante.\n      nuevoEstado.R[0] =\n        nuevoEstado.A[0] +\n        nuevoEstado.B[0] +\n        nuevoEstado.C[0] +\n        nuevoEstado.D[0];\n      nuevoEstado.R[1] =\n        nuevoEstado.A[1] +\n        nuevoEstado.B[1] +\n        nuevoEstado.C[1] +\n        nuevoEstado.D[1];\n\n      // Actualizamos el estado.\n      return {\n        ...nuevoEstado,\n      };\n    });\n  };\n\n  render() {\n    // Hack para forzar a que se actualice la gráfica.\n    let newGraph: string = randomBytes(21).toString();\n\n    // El componente.\n    return (\n      <div className=\"primer-programa\">\n        <h1>Programa #1</h1>\n        <p>\n          Programa que recibe los parámetros <code>a</code>, <code>b</code>,{\" \"}\n          <code>c</code> y<code>d</code> enteros los cuales son aplicados a los\n          vectores iniciales{\" \"}\n          <code>\n            A({CoordenadasIniciales.A[0]},{CoordenadasIniciales.A[1]})\n          </code>\n          ,\n          <code>\n            B({CoordenadasIniciales.B[0]},{CoordenadasIniciales.B[1]})\n          </code>\n          ,{\" \"}\n          <code>\n            C({CoordenadasIniciales.C[0]},{CoordenadasIniciales.C[1]})\n          </code>{\" \"}\n          y{\" \"}\n          <code>\n            D({CoordenadasIniciales.D[0]},{CoordenadasIniciales.D[1]})\n          </code>\n          , correspondientemente, se calcula la resultante (<code>R</code>) de\n          todos ellos y se grafica.\n        </p>\n        <p>\n          <strong>Entradas:</strong>\n          <ul>\n            <li>\n              <strong>a</strong>: Un escalar entero.\n            </li>\n            <li>\n              <strong>b</strong>: Un escalar entero.\n            </li>\n            <li>\n              <strong>c</strong>: Un escalar entero.\n            </li>\n            <li>\n              <strong>d</strong>: Un escalar entero.\n            </li>\n          </ul>\n        </p>\n        <hr></hr>\n        <p>Valores para el programa:</p>\n        <p>\n          <code>a</code> ={\" \"}\n          <input\n            type=\"number\"\n            name=\"a\"\n            id=\"a\"\n            value={this.state.a}\n            step={1}\n            onChange={this.actualizarCampo}\n          />{\" \"}\n          = <code>a·A</code> ={\" \"}\n          <code>\n            {this.state.a}·({CoordenadasIniciales.A[0]},\n            {CoordenadasIniciales.A[1]})\n          </code>{\" \"}\n          ={\" \"}\n          <code>\n            ({this.state.A[0]},{this.state.A[1]})\n          </code>\n        </p>\n        <p>\n          <code>b</code> ={\" \"}\n          <input\n            type=\"number\"\n            name=\"b\"\n            id=\"b\"\n            value={this.state.b}\n            step={1}\n            onChange={this.actualizarCampo}\n          />{\" \"}\n          = <code>b·B</code> ={\" \"}\n          <code>\n            {this.state.b}·({CoordenadasIniciales.B[0]},\n            {CoordenadasIniciales.B[1]})\n          </code>{\" \"}\n          ={\" \"}\n          <code>\n            ({this.state.B[0]},{this.state.B[1]})\n          </code>\n        </p>\n        <p>\n          <code>c</code> ={\" \"}\n          <input\n            type=\"number\"\n            name=\"c\"\n            id=\"c\"\n            value={this.state.c}\n            step={1}\n            onChange={this.actualizarCampo}\n          />{\" \"}\n          = <code>c·C</code> ={\" \"}\n          <code>\n            {this.state.c}·({CoordenadasIniciales.C[0]},\n            {CoordenadasIniciales.C[1]})\n          </code>{\" \"}\n          ={\" \"}\n          <code>\n            ({this.state.C[0]},{this.state.C[1]})\n          </code>\n        </p>\n        <p>\n          <code>d</code> ={\" \"}\n          <input\n            type=\"number\"\n            name=\"d\"\n            id=\"d\"\n            value={this.state.d}\n            step={1}\n            onChange={this.actualizarCampo}\n          />{\" \"}\n          = <code>d·D</code> ={\" \"}\n          <code>\n            {this.state.d}·({CoordenadasIniciales.D[0]},\n            {CoordenadasIniciales.D[1]})\n          </code>{\" \"}\n          ={\" \"}\n          <code>\n            ({this.state.D[0]},{this.state.D[1]})\n          </code>\n        </p>\n        <p>\n          Resultante = <code>R</code> = <code>aA + bB + cC + dD</code> ={\" \"}\n          <code>\n            ({this.state.A[0]},{this.state.A[1]}) + ({this.state.B[0]},\n            {this.state.B[1]}) + ({this.state.C[0]},{this.state.C[1]}) + (\n            {this.state.D[0]},{this.state.D[1]})\n          </code>{\" \"}\n          ={\" \"}\n          <code>\n            ({this.state.R[0]},{this.state.R[1]})\n          </code>\n        </p>\n        <div className=\"grafica\">\n          <JXGBoard\n            key={newGraph}\n            logic={this.logica}\n            boardAttributes={{\n              axis: true,\n              boundingbox: [-20, 20, 20, -20],\n              showCopyright: false,\n            }}\n            style={{\n              border: \"1px solid black\",\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PrimerPrograma;\n","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport \"./SegundoPrograma.css\";\nimport OrbitControls from \"three-orbitcontrols\";\nimport { CSS2DRenderer, CSS2DObject } from \"three-css2drenderer\";\n\nclass SegundoPrograma extends Component {\n  // Ejemplos para probar programa más fácilmente.\n  private ejemplosPredefinidos = [\n    {\n      name: \"Ejemplo 1\",\n      vecU: new THREE.Vector3(2, 0, 4),\n      vecV: new THREE.Vector3(3, 8, 2),\n      vecW: new THREE.Vector3(9, 1, 6),\n    },\n    {\n      name: \"Ejemplo 2\",\n      vecU: new THREE.Vector3(1, 3, -2),\n      vecV: new THREE.Vector3(2, 1, 4),\n      vecW: new THREE.Vector3(-3, 1, 6),\n    },\n    {\n      name: \"Ejemplo 3\",\n      vecU: new THREE.Vector3(1, 1, 0),\n      vecV: new THREE.Vector3(-1, 4, 0),\n      vecW: new THREE.Vector3(2, 2, 2),\n    },\n    {\n      name: \"Ejemplo 4\",\n      vecU: new THREE.Vector3(3, 1, 1),\n      vecV: new THREE.Vector3(1, 4, 1),\n      vecW: new THREE.Vector3(1, 1, 5),\n    },\n    {\n      name: \"Ejemplo 5\",\n      vecU: new THREE.Vector3(0, 0, 4),\n      vecV: new THREE.Vector3(1, 3, 0),\n      vecW: new THREE.Vector3(2, 0, 0),\n    },\n  ];\n\n  // Initial state definition.\n  state = {\n    vecU: new THREE.Vector3(),\n    vecV: new THREE.Vector3(),\n    vecW: new THREE.Vector3(),\n    vecWV: new THREE.Vector3(),\n    vecUW: new THREE.Vector3(),\n    vecUV: new THREE.Vector3(),\n    vecUVW: new THREE.Vector3(),\n    productoCruzUV: new THREE.Vector3(),\n    productoCruzVW: new THREE.Vector3(),\n    productoCruzUW: new THREE.Vector3(),\n    name: \"Gráfica\",\n    inputType: \"range\",\n    etiquetasVectoresActivadas: true,\n    etiquetasEjesActivadas: true,\n    etiquetasCoordenadasActivadas: true,\n    minValue: -5,\n    maxValue: 5,\n    area: 0,\n    volumen: 0,\n  };\n\n  crearEtiqueta = (\n    nombre: string,\n    x: number,\n    y: number,\n    z: number,\n    clase?: string\n  ) => {\n    const divEtiqueta = document.createElement(\"div\");\n    divEtiqueta.className = clase || \"label\";\n    divEtiqueta.textContent = nombre;\n    const etiqueta = new CSS2DObject(divEtiqueta);\n    etiqueta.position.set(x, z, y);\n    return etiqueta;\n  };\n\n  // Cada que se actualiza el estado, por ejemplo con la modificación del valor\n  // de algún input, se llama a esta función.\n  componentDidUpdate() {\n    // Sacar del estado los vectores.\n    const { vecU, vecV, vecW, vecWV, vecUW, vecUV, vecUVW } = this.state;\n\n    // Arreglo con los vértices de nuestra figura.\n    const vertices = new Float32Array([\n      // Triángulo origen -> u ; origen -> v\n      0,\n      0,\n      0,\n      vecU.x,\n      vecU.z,\n      vecU.y,\n      vecV.x,\n      vecV.z,\n      vecV.y,\n\n      // // Triángulo u -> v ; u -> u+v\n      vecU.x,\n      vecU.z,\n      vecU.y,\n      vecV.x,\n      vecV.z,\n      vecV.y,\n      vecUV.x,\n      vecUV.z,\n      vecUV.y,\n\n      // Triángulo origen -> u ; origen -> w\n      0,\n      0,\n      0,\n      vecU.x,\n      vecU.z,\n      vecU.y,\n      vecW.x,\n      vecW.z,\n      vecW.y,\n\n      // Triángulo u -> w ; u -> u+w\n      vecU.x,\n      vecU.z,\n      vecU.y,\n      vecW.x,\n      vecW.z,\n      vecW.y,\n      vecUW.x,\n      vecUW.z,\n      vecUW.y,\n\n      // Tiángulo origen -> v; origen -> w\n      0,\n      0,\n      0,\n      vecV.x,\n      vecV.z,\n      vecV.y,\n      vecW.x,\n      vecW.z,\n      vecW.y,\n\n      // Triángulo v -> w ; v -> w+v\n      vecV.x,\n      vecV.z,\n      vecV.y,\n      vecW.x,\n      vecW.z,\n      vecW.y,\n      vecWV.x,\n      vecWV.z,\n      vecWV.y,\n\n      // Triángulo w -> u+w ; w -> w+v\n      vecW.x,\n      vecW.z,\n      vecW.y,\n      vecUW.x,\n      vecUW.z,\n      vecUW.y,\n      vecWV.x,\n      vecWV.z,\n      vecWV.y,\n\n      // Triángulo u+w -> w+v ; u+w -> u+v+w\n      vecUW.x,\n      vecUW.z,\n      vecUW.y,\n      vecWV.x,\n      vecWV.z,\n      vecWV.y,\n      vecUVW.x,\n      vecUVW.z,\n      vecUVW.y,\n\n      // Triángulo u -> u+w ; u -> u+v\n      vecU.x,\n      vecU.z,\n      vecU.y,\n      vecUW.x,\n      vecUW.z,\n      vecUW.y,\n      vecUV.x,\n      vecUV.z,\n      vecUV.y,\n\n      // Triángulo u+w -> u+v+w ; u+w -> u+v\n      vecUW.x,\n      vecUW.z,\n      vecUW.y,\n      vecUV.x,\n      vecUV.z,\n      vecUV.y,\n      vecUVW.x,\n      vecUVW.z,\n      vecUVW.y,\n\n      // Triángulo v -> u+v ; v -> w+v\n      vecV.x,\n      vecV.z,\n      vecV.y,\n      vecWV.x,\n      vecWV.z,\n      vecWV.y,\n      vecUV.x,\n      vecUV.z,\n      vecUV.y,\n\n      // Triángulo w+v -> u+v ; w+v -> u+v+w\n      vecWV.x,\n      vecWV.z,\n      vecWV.y,\n      vecUV.x,\n      vecUV.z,\n      vecUV.y,\n      vecUVW.x,\n      vecUVW.z,\n      vecUVW.y,\n    ]);\n\n    // Escena de ThreeJS\n    var scene = new THREE.Scene();\n\n    // Cámara\n    let camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.y = 5;\n    camera.position.z = 15;\n    camera.updateProjectionMatrix();\n\n    // Calculamos el tamaño mínimo del grid.\n    let min: number = 10;\n\n    if (vecUVW.x > min) {\n      min = vecUVW.x + 1;\n    } else if (vecUVW.y > min) {\n      min = vecUVW.y + 1;\n    } else if (vecUVW.z > min) {\n      min = vecUVW.z + 1;\n    }\n\n    // Dibujar los ejes.\n\n    // Eje Z.\n    const ejeZPos = new THREE.ArrowHelper(\n      new THREE.Vector3(0, 1, 0).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, min + 0.5, 0).length(),\n      0x00ff00,\n      0.2,\n      0.1\n    );\n    scene.add(ejeZPos);\n    const ejeZNeg = new THREE.ArrowHelper(\n      new THREE.Vector3(0, -1, 0).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, -(min + 0.5), 0).length(),\n      0x00ff00,\n      0.2,\n      0.1\n    );\n    scene.add(ejeZNeg);\n\n    // Eje X.\n    const ejeXPos = new THREE.ArrowHelper(\n      new THREE.Vector3(1, 0, 0).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(min + 0.5, 0, 0).length(),\n      0xff0000,\n      0.2,\n      0.1\n    );\n    scene.add(ejeXPos);\n    const ejeXNeg = new THREE.ArrowHelper(\n      new THREE.Vector3(-1, 0, 0).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(-(min + 0.5), 0, 0).length(),\n      0xff0000,\n      0.2,\n      0.1\n    );\n    scene.add(ejeXNeg);\n\n    // Eje Y.\n    const ejeYPos = new THREE.ArrowHelper(\n      new THREE.Vector3(0, 0, 1).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, 0, min + 0.5).length(),\n      0x0000ff,\n      0.2,\n      0.1\n    );\n    scene.add(ejeYPos);\n    const ejeYNeg = new THREE.ArrowHelper(\n      new THREE.Vector3(0, 0, -1).clone().normalize(),\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, 0, -(min + 0.5)).length(),\n      0x0000ff,\n      0.2,\n      0.1\n    );\n    scene.add(ejeYNeg);\n\n    // Dibujar el grid.\n    const grid = new THREE.GridHelper(min * 2, min * 2);\n    scene.add(grid);\n\n    // Geometría\n    let geometry = new THREE.BufferGeometry();\n    geometry.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\n\n    // Material para el Mesh.\n    let material = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      wireframe: true,\n    });\n\n    // Mesh\n    let paralelepipedo = new THREE.Mesh(geometry, material);\n    scene.add(paralelepipedo);\n\n    // Etiquetas.\n\n    // Verificamos si están activadas las etiquetas en los ejes.\n    if (this.state.etiquetasEjesActivadas) {\n      // Eje x.\n      const etiquetaEjeXPos = this.crearEtiqueta(\n        \"+x\",\n        min + 1,\n        0,\n        0,\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeXPos);\n      const etiquetaEjeXNeg = this.crearEtiqueta(\n        \"-x\",\n        -(min + 1),\n        0,\n        0,\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeXNeg);\n\n      // Eje y.\n      const etiquetaEjeYPos = this.crearEtiqueta(\n        \"+y\",\n        0,\n        min + 1,\n        0,\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeYPos);\n      const etiquetaEjeYNeg = this.crearEtiqueta(\n        \"-y\",\n        0,\n        -(min + 1),\n        0,\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeYNeg);\n\n      // Eje z.\n      const etiquetaEjeZPos = this.crearEtiqueta(\n        \"+z\",\n        0,\n        0,\n        min + 1,\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeZPos);\n      const etiquetaEjeZNeg = this.crearEtiqueta(\n        \"-z\",\n        0,\n        0,\n        -(min + 1),\n        \"label-eje\"\n      );\n      paralelepipedo.add(etiquetaEjeZNeg);\n    }\n\n    // Verificamos si están activadas las etiquetas en los vectores.\n    if (this.state.etiquetasVectoresActivadas) {\n      // Vector u\n      const etiquetaVecU = this.crearEtiqueta(\"u\", vecU.x, vecU.y, vecU.z);\n      paralelepipedo.add(etiquetaVecU);\n\n      // Vector v\n      const etiquetaVecV = this.crearEtiqueta(\"v\", vecV.x, vecV.y, vecV.z);\n      paralelepipedo.add(etiquetaVecV);\n\n      // Vector w\n      const etiquetaVecW = this.crearEtiqueta(\"w\", vecW.x, vecW.y, vecW.z);\n      paralelepipedo.add(etiquetaVecW);\n\n      // Vector w+v\n      const etiquetaVecWV = this.crearEtiqueta(\n        \"w+v\",\n        vecWV.x,\n        vecWV.y,\n        vecWV.z\n      );\n      paralelepipedo.add(etiquetaVecWV);\n\n      // Vector u+w\n      const etiquetaVecUW = this.crearEtiqueta(\n        \"u+w\",\n        vecUW.x,\n        vecUW.y,\n        vecUW.z\n      );\n      paralelepipedo.add(etiquetaVecUW);\n\n      // Vector u+v\n      const etiquetaVecUV = this.crearEtiqueta(\n        \"u+v\",\n        vecUV.x,\n        vecUV.y,\n        vecUV.z\n      );\n      paralelepipedo.add(etiquetaVecUV);\n\n      // Vector u+v+w\n      const etiquetaVecUVW = this.crearEtiqueta(\n        \"u+v+w\",\n        vecUVW.x,\n        vecUVW.y,\n        vecUVW.z\n      );\n      paralelepipedo.add(etiquetaVecUVW);\n    }\n\n    // Verificamos si están activadas las etiquetas en las coordenadas.\n    if (this.state.etiquetasCoordenadasActivadas) {\n      // Números en los ejes.\n      for (let index = 1; index <= min; index++) {\n        const etiquetaNumX = this.crearEtiqueta(\n          String(index),\n          index,\n          0,\n          0,\n          \"label-eje-numero\"\n        );\n        const etiquetaNumXNeg = this.crearEtiqueta(\n          String(index * -1),\n          index * -1,\n          0,\n          0,\n          \"label-eje-numero\"\n        );\n        const etiquetaNumY = this.crearEtiqueta(\n          String(index),\n          0,\n          index,\n          0,\n          \"label-eje-numero\"\n        );\n        const etiquetaNumYNeg = this.crearEtiqueta(\n          String(index * -1),\n          0,\n          index * -1,\n          0,\n          \"label-eje-numero\"\n        );\n        const etiquetaNumZ = this.crearEtiqueta(\n          String(index),\n          0,\n          0,\n          index,\n          \"label-eje-numero\"\n        );\n        const etiquetaNumZNeg = this.crearEtiqueta(\n          String(index * -1),\n          0,\n          0,\n          index * -1,\n          \"label-eje-numero\"\n        );\n        paralelepipedo.add(etiquetaNumX);\n        paralelepipedo.add(etiquetaNumXNeg);\n        paralelepipedo.add(etiquetaNumY);\n        paralelepipedo.add(etiquetaNumYNeg);\n        paralelepipedo.add(etiquetaNumZ);\n        paralelepipedo.add(etiquetaNumZNeg);\n      }\n    }\n\n    // Div para gráfica.\n    const elemento = document.getElementById(\"grafica-programa-2\");\n\n    // Eliminamos la gráfica anterior si ya existe.\n    if (elemento?.hasChildNodes()) {\n      elemento.innerHTML = \"\";\n    }\n\n    // Renderers\n\n    var renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth * 0.8, window.innerHeight * 0.8);\n\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(window.innerWidth * 0.8, window.innerHeight * 0.8);\n    labelRenderer.domElement.style.position = \"absolute\";\n    // labelRenderer.domElement.style.top = \"0\";\n    labelRenderer.domElement.style.outline = \"none\";\n\n    // Añadimos los divs.\n    elemento?.appendChild(renderer.domElement);\n    elemento?.appendChild(labelRenderer.domElement);\n\n    // Controles de la cámara.\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    controls.reset();\n\n    // Animación\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n    };\n    animate();\n  }\n\n  // Restablece el estado a sus valores por defecto.\n  restablecer = (e: any) => {\n    this.setState((state) => {\n      return {\n        vecU: new THREE.Vector3(),\n        vecV: new THREE.Vector3(),\n        vecW: new THREE.Vector3(),\n        vecWV: new THREE.Vector3(),\n        vecUW: new THREE.Vector3(),\n        vecUV: new THREE.Vector3(),\n        vecUVW: new THREE.Vector3(),\n        productoCruzUV: new THREE.Vector3(),\n        productoCruzVW: new THREE.Vector3(),\n        productoCruzUW: new THREE.Vector3(),\n        name: \"Gráfica\",\n        inputType: \"range\",\n        etiquetasVectoresActivadas: true,\n        etiquetasEjesActivadas: true,\n        etiquetasCoordenadasActivadas: true,\n        minValue: -5,\n        maxValue: 5,\n        area: 0,\n        volumen: 0,\n      };\n    });\n  };\n\n  // Función que actualiza el estado con los valores en los campos.\n  actualizarCampo = (e: any) => {\n    this.setState((state) => {\n      // Creamos el nuevo estado.\n      const nuevoEstado: any = state;\n\n      // Asignamos el valor que puso el usuario al vector correspondiente.\n      if (e.target.name[0] === \"u\") {\n        nuevoEstado.vecU[e.target.name[1]] = Number(e.target.value);\n      } else if (e.target.name[0] === \"v\") {\n        nuevoEstado.vecV[e.target.name[1]] = Number(e.target.value);\n      } else if (e.target.name[0] === \"w\") {\n        nuevoEstado.vecW[e.target.name[1]] = Number(e.target.value);\n      } else {\n        nuevoEstado[e.target.name] = e.target.value;\n      }\n\n      // En estas llamadas asumimos que no vendrán de un ejemplo, por lo que\n      // regresamos al valor de \"Gráfica\".\n      nuevoEstado.name = \"Gráfica\";\n\n      // Calculamos los vectores resultantes de los vértices del paralelepípedo.\n      nuevoEstado.vecWV.addVectors(nuevoEstado.vecW, nuevoEstado.vecV);\n      nuevoEstado.vecUW.addVectors(nuevoEstado.vecU, nuevoEstado.vecW);\n      nuevoEstado.vecUV.addVectors(nuevoEstado.vecU, nuevoEstado.vecV);\n      nuevoEstado.vecUVW.addVectors(nuevoEstado.vecU, nuevoEstado.vecV);\n      nuevoEstado.vecUVW.add(nuevoEstado.vecW);\n\n      // Calculamos los producto cruz pertinentes para cálculos.\n      nuevoEstado.productoCruzUV.crossVectors(\n        nuevoEstado.vecU,\n        nuevoEstado.vecV\n      );\n      nuevoEstado.productoCruzVW.crossVectors(\n        nuevoEstado.vecV,\n        nuevoEstado.vecW\n      );\n      nuevoEstado.productoCruzUW.crossVectors(\n        nuevoEstado.vecU,\n        nuevoEstado.vecW\n      );\n\n      // Calculamos el área.\n      nuevoEstado.area =\n        2 * Math.abs(nuevoEstado.productoCruzUV.length()) +\n        2 * Math.abs(nuevoEstado.productoCruzVW.length()) +\n        2 * Math.abs(nuevoEstado.productoCruzUW.length());\n\n      // Calculamos el volumen.\n      nuevoEstado.volumen = Math.abs(\n        nuevoEstado.vecW.dot(nuevoEstado.productoCruzUV)\n      );\n\n      // Actualizamos el estado.\n      return {\n        ...nuevoEstado,\n      };\n    });\n  };\n\n  // Función para activar ejemplo.\n  activarEjemplo = (e: any) => {\n    const ejemploEncontrado = this.ejemplosPredefinidos.find(\n      (ejemploActual) => ejemploActual.name === e.target.name\n    );\n\n    // Si encontramos el ejemplo buscado, colocamos el estado correspondiente.\n    if (ejemploEncontrado) {\n      this.setState((estadoAnterior) => {\n        // Creamos el nuevo estado.\n        const nuevoEstado: any = { ...estadoAnterior, ...ejemploEncontrado };\n\n        // Calculamos los vectores resultantes de los vértices del paralelepípedo.\n        nuevoEstado.vecWV.addVectors(nuevoEstado.vecW, nuevoEstado.vecV);\n        nuevoEstado.vecUW.addVectors(nuevoEstado.vecU, nuevoEstado.vecW);\n        nuevoEstado.vecUV.addVectors(nuevoEstado.vecU, nuevoEstado.vecV);\n        nuevoEstado.vecUVW.addVectors(nuevoEstado.vecU, nuevoEstado.vecV);\n        nuevoEstado.vecUVW.add(nuevoEstado.vecW);\n\n        // Calculamos los producto cruz pertinentes para cálculos.\n        nuevoEstado.productoCruzUV.crossVectors(\n          nuevoEstado.vecU,\n          nuevoEstado.vecV\n        );\n        nuevoEstado.productoCruzVW.crossVectors(\n          nuevoEstado.vecV,\n          nuevoEstado.vecW\n        );\n        nuevoEstado.productoCruzUW.crossVectors(\n          nuevoEstado.vecU,\n          nuevoEstado.vecW\n        );\n\n        // Calculamos el área.\n        nuevoEstado.area =\n          2 * Math.abs(nuevoEstado.productoCruzUV.length()) +\n          2 * Math.abs(nuevoEstado.productoCruzVW.length()) +\n          2 * Math.abs(nuevoEstado.productoCruzUW.length());\n\n        // Calculamos el volumen.\n        nuevoEstado.volumen = Math.abs(\n          nuevoEstado.vecW.dot(nuevoEstado.productoCruzUV)\n        );\n\n        // Actualizamos el estado.\n        return {\n          ...nuevoEstado,\n        };\n      });\n    } else {\n      this.setState((estadoAnterior) => {\n        return {\n          ...estadoAnterior,\n          name: \"Gráfica\",\n        };\n      });\n    }\n  };\n\n  // Función para cambiar el estado de una etiqueta.\n  cambiarEstadoEtiqueta = (e: any) => {\n    // Actualizamos el estado.\n    this.setState((estadoAnterior) => {\n      // Copiamos el estado.\n      const nuevoEstado: any = estadoAnterior;\n\n      // Negamos el valor presente en la bandera.\n      nuevoEstado[e.target.name] = !nuevoEstado[e.target.name];\n\n      // Regresamos el estado.\n      return {\n        ...nuevoEstado,\n      };\n    });\n  };\n\n  // Función principal de renderizado de página web.\n  render() {\n    return (\n      <div className=\"segundo-programa\">\n        <h1>Programa #2</h1>\n        <p>\n          Programa que recibe tres vectores en el espacio R^3 (tres dimensiones)\n          con los cuales se genera un paralelepípedo del cual se calcula su área\n          y su volumen.\n        </p>\n        <p>\n          <strong>Entradas:</strong>\n          <ul>\n            <li>\n              <strong>u</strong>: vector de tres dimensiones.\n            </li>\n            <li>\n              <strong>v</strong>: vector de tres dimensiones.\n            </li>\n            <li>\n              <strong>w</strong>: vector de tres dimensiones.\n            </li>\n          </ul>\n        </p>\n        <hr />\n        <p>Tipo de entrada:</p>\n        <p>\n          <div onChange={this.actualizarCampo}>\n            <input\n              checked={this.state.inputType === \"range\"}\n              type=\"radio\"\n              name=\"inputType\"\n              id=\"inputType\"\n              value={\"range\"}\n            />{\" \"}\n            Slider\n            <input\n              checked={this.state.inputType === \"number\"}\n              type=\"radio\"\n              name=\"inputType\"\n              id=\"inputType\"\n              value={\"number\"}\n            />{\" \"}\n            Numérico\n          </div>\n        </p>\n        <p>Rango de valores para entradas:</p>\n        <p>\n          Mínimo:{\" \"}\n          <input\n            type=\"number\"\n            name=\"minValue\"\n            id=\"minValue\"\n            value={this.state.minValue}\n            onChange={this.actualizarCampo}\n          />\n          , Máximo:{\" \"}\n          <input\n            type=\"number\"\n            name=\"maxValue\"\n            id=\"maxValue\"\n            value={this.state.maxValue}\n            onChange={this.actualizarCampo}\n          />\n          ,<button onClick={this.restablecer}>Reestablecer</button>\n        </p>\n        <p>Etiquetas activadas:</p>\n        <p>\n          <input\n            type=\"checkbox\"\n            name=\"etiquetasVectoresActivadas\"\n            id=\"etiquetasVectoresActivadas\"\n            checked={this.state.etiquetasVectoresActivadas}\n            onChange={this.cambiarEstadoEtiqueta}\n          />{\" \"}\n          Etiquetas en vectores.\n        </p>\n        <p>\n          <input\n            type=\"checkbox\"\n            name=\"etiquetasCoordenadasActivadas\"\n            id=\"etiquetasCoordenadasActivadas\"\n            checked={this.state.etiquetasCoordenadasActivadas}\n            onChange={this.cambiarEstadoEtiqueta}\n          />{\" \"}\n          Etiquetas en coordenadas.\n        </p>\n        <p>\n          <input\n            type=\"checkbox\"\n            name=\"etiquetasEjesActivadas\"\n            id=\"etiquetasEjesActivadas\"\n            checked={this.state.etiquetasEjesActivadas}\n            onChange={this.cambiarEstadoEtiqueta}\n          />{\" \"}\n          Etiquetas en ejes.\n        </p>\n        <p>Valores para el programa:</p>\n        <p>\n          <code>u</code> = (x:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"ux\"\n            id=\"ux\"\n            value={this.state.vecU.x}\n            onChange={this.actualizarCampo}\n          />\n          , y:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"uy\"\n            id=\"uy\"\n            value={this.state.vecU.y}\n            onChange={this.actualizarCampo}\n          />\n          , z:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"uz\"\n            id=\"uz\"\n            value={this.state.vecU.z}\n            onChange={this.actualizarCampo}\n          />\n          ) = (<code>{this.state.vecU.x}</code>,<code>{this.state.vecU.y}</code>\n          ,<code>{this.state.vecU.z}</code>)\n        </p>\n        <p>\n          <code>v</code> = (x:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"vx\"\n            id=\"vx\"\n            value={this.state.vecV.x}\n            onChange={this.actualizarCampo}\n          />\n          , y:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"vy\"\n            id=\"vy\"\n            value={this.state.vecV.y}\n            onChange={this.actualizarCampo}\n          />\n          , z:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"vz\"\n            id=\"vz\"\n            value={this.state.vecV.z}\n            onChange={this.actualizarCampo}\n          />\n          ) = (<code>{this.state.vecV.x}</code>,<code>{this.state.vecV.y}</code>\n          ,<code>{this.state.vecV.z}</code>)\n        </p>\n        <p>\n          <code>w</code> = (x:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"wx\"\n            id=\"wx\"\n            value={this.state.vecW.x}\n            onChange={this.actualizarCampo}\n          />\n          , y:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"wy\"\n            id=\"wy\"\n            value={this.state.vecW.y}\n            onChange={this.actualizarCampo}\n          />\n          , z:\n          <input\n            type={this.state.inputType}\n            min={this.state.minValue}\n            max={this.state.maxValue}\n            step={0.1}\n            name=\"wz\"\n            id=\"wz\"\n            value={this.state.vecW.z}\n            onChange={this.actualizarCampo}\n          />\n          ) = (<code>{this.state.vecW.x}</code>,<code>{this.state.vecW.y}</code>\n          ,<code>{this.state.vecW.z}</code>)\n        </p>\n        <p>\n          <strong>Ejemplos predefinidos</strong>\n        </p>\n        <p>\n          <i>\n            Puedes utilizar alguno de los ejemplos predefinidos a continuación:\n          </i>\n        </p>\n        {this.ejemplosPredefinidos.map((ejemploPredefinido) => (\n          <button onClick={this.activarEjemplo} name={ejemploPredefinido.name}>\n            {ejemploPredefinido.name}\n          </button>\n        ))}\n        <hr></hr>\n        <p>\n          <strong>Salidas:</strong>\n          <ul>\n            <li>\n              <strong>Área:</strong> <code>{this.state.area}</code> unidades\n              cuadradas.\n            </li>\n            <li>\n              <strong>Volumen:</strong> <code>{this.state.volumen}</code>{\" \"}\n              unidades cúbicas.\n            </li>\n            <li>\n              <strong>Vectores originales</strong>:\n              <ul>\n                <li>\n                  <strong>u</strong>=(<code>{this.state.vecU.x}</code>,\n                  <code>{this.state.vecU.y}</code>,\n                  <code>{this.state.vecU.z}</code>\n                  ).\n                </li>\n                <li>\n                  <strong>v</strong>=(<code>{this.state.vecV.x}</code>,\n                  <code>{this.state.vecV.y}</code>,\n                  <code>{this.state.vecV.z}</code>\n                  ).\n                </li>\n                <li>\n                  <strong>w</strong>=(<code>{this.state.vecW.x}</code>,\n                  <code>{this.state.vecW.y}</code>,\n                  <code>{this.state.vecW.z}</code>\n                  ).\n                </li>\n              </ul>\n            </li>\n            <li>\n              <strong>Vectores complementarios</strong>:\n              <ul>\n                <li>\n                  <strong>u+v</strong>: (<code>{this.state.vecUV.x}</code>,\n                  <code>{this.state.vecUV.y}</code>,\n                  <code>{this.state.vecUV.z}</code>)\n                </li>\n                <li>\n                  <strong>w+v</strong>: (<code>{this.state.vecWV.x}</code>,\n                  <code>{this.state.vecWV.y}</code>,\n                  <code>{this.state.vecWV.z}</code>)\n                </li>\n                <li>\n                  <strong>u+w</strong>: (<code>{this.state.vecUW.x}</code>,\n                  <code>{this.state.vecUW.y}</code>,\n                  <code>{this.state.vecUW.z}</code>)\n                </li>\n                <li>\n                  <strong>u+v+w</strong>: (<code>{this.state.vecUVW.x}</code>,\n                  <code>{this.state.vecUVW.y}</code>,\n                  <code>{this.state.vecUVW.z}</code>)\n                </li>\n                <li>\n                  <strong>u×v</strong>: (\n                  <code>{this.state.productoCruzUV.x}</code>,\n                  <code>{this.state.productoCruzUV.y}</code>,\n                  <code>{this.state.productoCruzUV.z}</code>)\n                </li>\n                <li>\n                  <strong>v×w</strong>: (\n                  <code>{this.state.productoCruzVW.x}</code>,\n                  <code>{this.state.productoCruzVW.y}</code>,\n                  <code>{this.state.productoCruzVW.z}</code>)\n                </li>\n                <li>\n                  <strong>u×w</strong>: (\n                  <code>{this.state.productoCruzUW.x}</code>,\n                  <code>{this.state.productoCruzUW.y}</code>,\n                  <code>{this.state.productoCruzUW.z}</code>)\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <h3 className=\"titulo-grafica\">{this.state.name}:</h3>\n        </p>\n        <div id=\"grafica-programa-2\">\n          <i>\n            (Modifica los valores de los vectores o selecciona un ejemplo para\n            comenzar con el render)\n          </i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SegundoPrograma;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AcercaDe from '../AcercaDe/AcercaDe';\nimport Footer from '../Footer/Footer';\nimport Navbar from '../Navbar/Navbar';\nimport Presentacion from '../Presentacion/Presentacion';\nimport PrimerPrograma from '../PrimerPrograma/PrimerPrograma';\nimport SegundoPrograma from '../SegundoPrograma/SegundoPrograma';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <BrowserRouter>\n          <Route path='/analisis-vectorial-escom/:page' component={Navbar} />\n          <Route exact path=\"/\" component={Navbar} />\n          <Route exact path=\"/\" component={Presentacion} />\n          <Route exact path=\"/analisis-vectorial-escom\" component={Navbar} />\n          <Route exact path=\"/analisis-vectorial-escom\" component={Presentacion} />\n          <Route exact path=\"/analisis-vectorial-escom/primer-programa\" component={PrimerPrograma} />\n          <Route exact path=\"/analisis-vectorial-escom/segundo-programa\" component={SegundoPrograma} />\n          <Route exact path=\"/analisis-vectorial-escom/acerca-de\" component={AcercaDe} />\n        </BrowserRouter>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}