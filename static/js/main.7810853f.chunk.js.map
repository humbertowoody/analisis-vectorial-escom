{"version":3,"sources":["components/AcercaDe/AcercaDe.tsx","components/Footer/Footer.tsx","components/Navbar/Navbar.tsx","components/Presentacion/Presentacion.tsx","components/PrimerPrograma/PrimerPrograma.tsx","components/SegundoPrograma/SegundoPrograma.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AcercaDe","Component","Presentacion","className","href","Navbar","page","useParams","to","CoordenadasIniciales","A","B","C","D","R","PrimerPrograma","props","state","a","b","c","d","logica","brd","suspendUpdate","create","size","name","straightFirst","straightLast","lastArrow","strokeColor","unsuspendUpdate","actualizarCampo","e","setState","nuevoEstado","target","Number","value","toUpperCase","newGraph","randomBytes","toString","type","id","this","step","onChange","logic","boardAttributes","axis","boundingbox","showCopyright","style","border","SegundoPrograma","ux","uy","uz","vx","vy","vz","wx","wy","wz","area","volumen","vecU","THREE","vecV","vecW","productoCruzUV","crossVectors","productoCruzVW","productoCruzUW","Math","abs","length","dot","vecWV","addVectors","vecUW","vecUV","vecUVW","add","vertices","Float32Array","x","y","z","console","table","scene","camera","window","innerWidth","innerHeight","renderer","setSize","elemento","document","getElementById","hasChildNodes","innerHTML","appendChild","domElement","geometry","setAttribute","material","color","wireframe","cube","position","animate","requestAnimationFrame","rotation","render","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7810853f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass AcercaDe extends Component {\n    render() {\n        return <div>\n            <h1>Información</h1>\n            <ul>\n                <li><strong>Alumno</strong>: Humberto Alejandro Ortega Alcocer</li>\n                <li><strong>Boleta</strong>: 2016630495</li>\n                <li><strong>Semestre</strong>: Febrero - Junio, 2021</li>\n            </ul>\n        </div>\n    }\n}\n\nexport default AcercaDe;","import React from 'react';\nimport './Footer.css';\n\nfunction Presentacion() {\n  return (\n    <footer className=\"footer\">\n      <p>\n        Análisis Vectorial - Humberto Alcocer\n        </p>\n      <p>Si deseas ver el código fuente, visita el proyecto en GitHub: <a href=\"https://github.com/humbertowoody/analisis-vectorial-escom\">github.com/humbertowoody/analisis-vectorial-escom</a></p>\n    </footer>\n  );\n}\n\nexport default Presentacion;","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n    const params: any = useParams();\n    const page = params.page || '/';\n\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"title\" to=\"/\">Análisis Vectorial</Link>\n            <div className=\"links\">\n                <Link to=\"/primer-programa\" className={page === 'primer-programa' ? 'active-link' : ''}>Primer Programa</Link>\n                <Link to=\"/segundo-programa\" className={page === 'segundo-programa' ? 'active-link' : ''}>Segundo Programa</Link>\n                <Link to=\"/acerca-de\" className={page === 'acerca-de' ? 'active-link' : ''}>Acerca De</Link>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport './Presentacion.css';\n\nfunction Presentacion() {\n  return (\n    <header className=\"presentacion\">\n      <h1>Análisis Vectorial</h1>\n      <p>Profesor: Dr. Dárwin Gutiérrez Mejía</p>\n      <p>\n        En este sitio viven los programas y proyectos realizados para la materia de Análisis Vectorial\n        durante el semestre Febrero 2021 - Junio 2021.\n      </p>\n    </header>\n  );\n}\n\nexport default Presentacion;","import { randomBytes } from 'crypto';\nimport JXGBoard from 'jsxgraph-react-js';\nimport React, { Component } from 'react';\nimport './PrimerPrograma.css';\n\n/**\n * Las coordenadas iniciales para los vectores.\n */\nexport const CoordenadasIniciales: any = {\n  A: [2, 2],\n  B: [-2, 2],\n  C: [-2, -2],\n  D: [2, -2],\n  R: [0, 0]\n};\n\n/**\n * El primer programa de la materia.\n */\nclass PrimerPrograma extends Component {\n\n  // Definición del estado inicial.\n  state = {\n    a: 1,\n    b: 1,\n    c: 1,\n    d: 1,\n    A: [2, 2],\n    B: [-2, 2],\n    C: [-2, -2],\n    D: [2, -2],\n    R: [0, 0],\n  }\n\n  // Constructor de la clase.\n  constructor(props: any) {\n    super(props);\n  }\n\n  logica = (brd: any) => {\n    // Extraemos las variables del estado.\n    let { A, B, C, D, R } = this.state;\n\n    // Suspendemos la actualización del chart.\n    brd.suspendUpdate();\n\n    // Graficamos las leyendas para cada vector.\n    let puntoA = brd.create('point', A, { size: 0, name: 'A' });\n    let puntoB = brd.create('point', B, { size: 0, name: 'B' });\n    let puntoC = brd.create('point', C, { size: 0, name: 'C' });\n    let puntoD = brd.create('point', D, { size: 0, name: 'D' });\n    let puntoR = brd.create('point', R, { size: 0, name: 'R' });\n\n    // Graficamos los vectores.\n    let vecA = brd.create('line', [[0, 0], A], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue',\n      name: 'A'\n    });\n    let vecB = brd.create('line', [[0, 0], B], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n    let vecC = brd.create('line', [[0, 0], C], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n    let vecD = brd.create('line', [[0, 0], D], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n\n    let resultante = brd.create('line', [[0, 0], R], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'red'\n    });\n\n    // Reanudamos la actualización del chart.\n    brd.unsuspendUpdate();\n  }\n\n  actualizarCampo = (e: any) => {\n    this.setState(state => {\n      // Creamos el nuevo estado.\n      const nuevoEstado: any = state;\n\n      // Asignamos el valor que puso el usuario.\n      nuevoEstado[e.target.name] = Number(e.target.value);\n\n      // Calculamos el valor para el vector correspondiente.\n      nuevoEstado[e.target.name.toUpperCase()] = [\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][0],\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][1]\n      ];\n\n      // Calculamos el nuevo valor para la resultante.\n      nuevoEstado.R[0] = nuevoEstado.A[0] + nuevoEstado.B[0] + nuevoEstado.C[0] + nuevoEstado.D[0];\n      nuevoEstado.R[1] = nuevoEstado.A[1] + nuevoEstado.B[1] + nuevoEstado.C[1] + nuevoEstado.D[1];\n\n\n      // Actualizamos el estado.\n      return ({\n        ...nuevoEstado,\n      })\n    })\n  }\n\n\n  render() {\n    // Hack para forzar a que se actualice la gráfica.\n    let newGraph: string = randomBytes(21).toString();\n\n    // El componente.\n    return (\n      <div className=\"primer-programa\">\n        <h1>Programa #1</h1>\n        <p>\n          Programa que recibe los parámetros <code>a</code>, <code>b</code>, <code>c</code> y\n          <code>d</code> enteros los cuales son aplicados a los vectores iniciales <code>A({CoordenadasIniciales.A[0]},{CoordenadasIniciales.A[1]})</code>,\n          <code>B({CoordenadasIniciales.B[0]},{CoordenadasIniciales.B[1]})</code>, <code>C({CoordenadasIniciales.C[0]},{CoordenadasIniciales.C[1]})</code> y <code>D({CoordenadasIniciales.D[0]},{CoordenadasIniciales.D[1]})</code>, correspondientemente,\n          se calcula la resultante (<code>R</code>) de todos ellos y se grafica.\n        </p>\n        <p>\n          <strong>Entradas:</strong>\n          <ul>\n            <li><strong>a</strong>: Un escalar entero.</li>\n            <li><strong>b</strong>: Un escalar entero.</li>\n            <li><strong>c</strong>: Un escalar entero.</li>\n            <li><strong>d</strong>: Un escalar entero.</li>\n          </ul>\n        </p>\n        <hr></hr>\n        <p>Valores para el programa:</p>\n        <p>\n          <code>a</code> = <input type=\"number\" name=\"a\" id=\"a\" value={this.state.a} step={1} onChange={this.actualizarCampo} /> = <code>a·A</code> = <code>{this.state.a}·({CoordenadasIniciales.A[0]},{CoordenadasIniciales.A[1]})</code> = <code>({this.state.A[0]},{this.state.A[1]})</code>\n        </p>\n        <p>\n          <code>b</code> = <input type=\"number\" name=\"b\" id=\"b\" value={this.state.b} step={1} onChange={this.actualizarCampo} /> = <code>b·B</code> = <code>{this.state.b}·({CoordenadasIniciales.B[0]},{CoordenadasIniciales.B[1]})</code> = <code>({this.state.B[0]},{this.state.B[1]})</code>\n        </p>\n        <p>\n          <code>c</code> = <input type=\"number\" name=\"c\" id=\"c\" value={this.state.c} step={1} onChange={this.actualizarCampo} /> = <code>c·C</code> = <code>{this.state.c}·({CoordenadasIniciales.C[0]},{CoordenadasIniciales.C[1]})</code> = <code>({this.state.C[0]},{this.state.C[1]})</code>\n        </p>\n        <p>\n          <code>d</code> = <input type=\"number\" name=\"d\" id=\"d\" value={this.state.d} step={1} onChange={this.actualizarCampo} /> = <code>d·D</code> = <code>{this.state.d}·({CoordenadasIniciales.D[0]},{CoordenadasIniciales.D[1]})</code> = <code>({this.state.D[0]},{this.state.D[1]})</code>\n        </p>\n        <p>\n          Resultante = <code>R</code> = <code>aA + bB + cC + dD</code> = <code>({this.state.A[0]},{this.state.A[1]}) + ({this.state.B[0]},{this.state.B[1]}) + ({this.state.C[0]},{this.state.C[1]}) + ({this.state.D[0]},{this.state.D[1]})</code> = <code>({this.state.R[0]},{this.state.R[1]})</code>\n        </p>\n        <JXGBoard\n          key={newGraph}\n          className=\"grafica\"\n          logic={this.logica}\n          boardAttributes={{\n            axis: true,\n            boundingbox: [-20, 20, 20, -20],\n            showCopyright: false,\n          }}\n          style={{\n            border: '1px solid black'\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PrimerPrograma;\n","import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport ReactDOM from 'react-dom';\nimport './SegundoPrograma.css';\n\nclass SegundoPrograma extends Component {\n\n    state = {\n        ux: 1, uy: 3, uz: -2,\n        vx: 2, vy: 1, vz: 4,\n        wx: -3, wy: 1, wz: 6,\n        area: 0,\n        volumen: 0\n    }\n\n    // Constructor de la clase\n    constructor(props: any) {\n        super(props);\n    }\n\n    componentDidUpdate() {\n        // componentDidMount() {\n        // Sacar del estado los vectores.\n        const vecU = new THREE.Vector3(this.state.ux, this.state.uy, this.state.uz);\n        const vecV = new THREE.Vector3(this.state.vx, this.state.vy, this.state.vz);\n        const vecW = new THREE.Vector3(this.state.wx, this.state.wy, this.state.wz);\n\n        // Calculamos los vectores resultantes de los vértices del paralelepípedo.\n        const vecWV = new THREE.Vector3();\n        vecWV.addVectors(vecW, vecV);\n        const vecUW = new THREE.Vector3();\n        vecUW.addVectors(vecU, vecW);\n        const vecUV = new THREE.Vector3();\n        vecUV.addVectors(vecU, vecV);\n        const vecUVW = new THREE.Vector3();\n        vecUVW.addVectors(vecU, vecV);\n        vecUVW.add(vecW);\n\n        const vertices = new Float32Array([\n            0, 0, 0,\n            vecU.x, vecU.y, vecU.z,\n            vecV.x, vecV.y, vecV.z,\n\n            vecU.x, vecU.y, vecU.z,\n            vecV.x, vecV.y, vecV.z,\n            vecUV.x, vecUV.y, vecUV.z,\n\n            0, 0, 0,\n            vecU.x, vecU.y, vecU.z,\n            vecW.x, vecW.y, vecW.z,\n\n            vecU.x, vecU.y, vecU.z,\n            vecW.x, vecW.y, vecW.z,\n            vecUW.x, vecUW.y, vecUW.z,\n\n            0, 0, 0,\n            vecV.x, vecV.y, vecV.z,\n            vecW.x, vecW.y, vecW.z,\n\n            vecV.x, vecV.y, vecV.z,\n            vecW.x, vecW.y, vecW.z,\n            vecWV.x, vecWV.y, vecWV.z,\n\n            vecW.x, vecW.y, vecW.z,\n            vecUW.x, vecUW.y, vecUW.z,\n            vecUV.x, vecUV.y, vecUV.z,\n\n            vecUW.x, vecUW.y, vecUW.z,\n            vecUV.x, vecUV.y, vecUV.z,\n            vecUVW.x, vecUVW.y, vecUVW.z,\n\n            vecU.x, vecU.y, vecU.z,\n            vecUW.x, vecUW.y, vecUW.z,\n            vecUV.x, vecUV.y, vecUV.z,\n\n            vecUW.x, vecUW.y, vecUW.z,\n            vecUV.x, vecUV.y, vecUV.z,\n            vecUVW.x, vecUVW.y, vecUVW.z,\n\n            vecV.x, vecV.y, vecV.z,\n            vecWV.x, vecWV.y, vecWV.z,\n            vecUV.x, vecUV.y, vecUV.z,\n\n            vecWV.x, vecWV.y, vecWV.z,\n            vecUV.x, vecUV.y, vecUV.z,\n            vecUVW.x, vecUVW.y, vecUVW.z,\n        ]);\n\n        console.table(vertices);\n\n        // Inicialización de threejs.\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        // document.body.appendChild(renderer.domElement);\n        const elemento = document.getElementById('grafica-programa-2');\n        if (elemento?.hasChildNodes()) {\n            elemento.innerHTML = '';\n        }\n        elemento?.appendChild(renderer.domElement);\n\n        // var geometry = new THREE.BoxGeometry(1, 1, 1);\n        let geometry = new THREE.BufferGeometry();\n        geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\n        var material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true });\n        var cube = new THREE.Mesh(geometry, material);\n        scene.add(cube);\n        camera.position.z = 15;\n        var animate = function () {\n            requestAnimationFrame(animate);\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            renderer.render(scene, camera);\n        };\n        animate();\n        // === THREE.JS EXAMPLE CODE END ===\n    }\n\n    actualizarCampo = (e: any) => {\n        this.setState(state => {\n            // Creamos el nuevo estado.\n            const nuevoEstado: any = state;\n\n            // Asignamos el valor que puso el usuario.\n            nuevoEstado[e.target.name] = Number(e.target.value);\n\n            // Usamos vectores de three.js\n            const vecU = new THREE.Vector3(nuevoEstado.ux, nuevoEstado.uy, nuevoEstado.uz);\n            const vecV = new THREE.Vector3(nuevoEstado.vx, nuevoEstado.vy, nuevoEstado.vz);\n            const vecW = new THREE.Vector3(nuevoEstado.wx, nuevoEstado.wy, nuevoEstado.wz);\n\n            // Calculamos los producto cruz pertinentes para cálculos.\n            const productoCruzUV = new THREE.Vector3();\n            productoCruzUV.crossVectors(vecU, vecV);\n            const productoCruzVW = new THREE.Vector3();\n            productoCruzVW.crossVectors(vecV, vecW);\n            const productoCruzUW = new THREE.Vector3();\n            productoCruzUW.crossVectors(vecU, vecW);\n\n            // Calculamos el área.\n            nuevoEstado.area = (2 * Math.abs(productoCruzUV.length())) + (2 * Math.abs(productoCruzVW.length())) + (2 * Math.abs(productoCruzUW.length()));\n\n            // Calculamos el volumen.\n            nuevoEstado.volumen = Math.abs(vecW.dot(productoCruzUV));\n\n            // Actualizamos el estado.\n            return ({\n                ...nuevoEstado,\n            })\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"segundo-programa\">\n                <h1>Programa #2</h1>\n                <p>\n                    Programa que recibe tres vectores en el espacio R^3 (tres dimensiones) con los cuales se\n                    genera un paralelepípedo del cual se calcula su área y su volúmen.\n                </p>\n                <p>\n                    <strong>Entradas:</strong>\n                    <ul>\n                        <li><strong>u</strong>: vector de tres dimensiones.</li>\n                        <li><strong>v</strong>: vector de tres dimensiones.</li>\n                        <li><strong>w</strong>: vector de tres dimensiones.</li>\n                    </ul>\n                </p>\n                <hr />\n                <p>\n                    Valores para el programa:\n                </p>\n                <p>\n                    <code>u</code> = (<input type=\"number\" name=\"ux\" id=\"ux\" value={this.state.ux} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"uy\" id=\"uy\" value={this.state.uy} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"uz\" id=\"uz\" value={this.state.uz} onChange={this.actualizarCampo} />)\n                </p>\n                <p>\n                    <code>v</code> = (<input type=\"number\" name=\"vx\" id=\"vx\" value={this.state.vx} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"vy\" id=\"vy\" value={this.state.vy} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"vz\" id=\"vz\" value={this.state.vz} onChange={this.actualizarCampo} />)\n                </p>\n                <p>\n                    <code>w</code> = (<input type=\"number\" name=\"wx\" id=\"wx\" value={this.state.wx} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"wy\" id=\"wy\" value={this.state.wy} onChange={this.actualizarCampo} />, <input type=\"number\" name=\"wz\" id=\"wz\" value={this.state.wz} onChange={this.actualizarCampo} />)\n                </p>\n                <hr></hr>\n                <p>\n                    <strong>Salidas:</strong>\n                    <ul>\n                        <li><strong>Área:</strong> <code>{this.state.area}</code> unidades cuadradas.</li>\n                        <li><strong>Volumen:</strong> <code>{this.state.volumen}</code> unidades cúbicas.</li>\n                    </ul>\n                    <strong>Gráfica:</strong>\n                </p>\n                <div id=\"grafica-programa-2\" />\n            </div>\n        )\n    }\n}\n\nexport default SegundoPrograma;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AcercaDe from '../AcercaDe/AcercaDe';\nimport Footer from '../Footer/Footer';\nimport Navbar from '../Navbar/Navbar';\nimport Presentacion from '../Presentacion/Presentacion';\nimport PrimerPrograma from '../PrimerPrograma/PrimerPrograma';\nimport SegundoPrograma from '../SegundoPrograma/SegundoPrograma';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <BrowserRouter>\n          {/* <Navbar /> */}\n          <Route path='/:page' component={Navbar} />\n          <Route exact path=\"/\" component={Navbar} />\n          <Route exact path=\"/\" component={Presentacion} />\n          <Route exact path=\"/primer-programa\" component={PrimerPrograma} />\n          <Route exact path=\"/segundo-programa\" component={SegundoPrograma} />\n          <Route exact path=\"/acerca-de\" component={AcercaDe} />\n        </BrowserRouter>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}