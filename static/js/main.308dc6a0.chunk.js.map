{"version":3,"sources":["components/Footer/Footer.tsx","components/Presentacion/Presentacion.tsx","components/PrimerPrograma/PrimerPrograma.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Presentacion","className","href","CoordenadasIniciales","A","B","C","D","R","PrimerPrograma","props","state","a","b","c","d","logica","brd","suspendUpdate","create","size","name","straightFirst","straightLast","lastArrow","strokeColor","unsuspendUpdate","actualizarCampo","e","setState","nuevoEstado","target","Number","value","toUpperCase","newGraph","randomBytes","toString","type","id","this","step","onChange","logic","boardAttributes","axis","boundingbox","showCopyright","style","border","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.308dc6a0.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.css';\n\nfunction Presentacion() {\n  return (\n    <footer className=\"footer\">\n      <p>\n        Este sitio fue realizado por: Humberto Alejandro Ortega Alcocer\n        </p>\n      <p>Número de Boleta: 2016630495</p>\n      <p>Si deseas ver el código fuente, visita el proyecto en GitHub: <a href=\"https://github.com/humbertowoody/analisis-vectorial-escom\">github.com/humbertowoody/analisis-vectorial-escom</a></p>\n    </footer>\n  );\n}\n\nexport default Presentacion;","import React from 'react';\nimport './Presentacion.css';\n\nfunction Presentacion() {\n  return (\n    <header className=\"presentacion\">\n      <h1>Análisis Vectorial</h1>\n      <p>Profesor: Dr. Dárwin Gutiérrez Mejía</p>\n      <p>\n        En este sitio viven los programas y proyectos realizados para la materia de Análisis Vectorial\n        durante el semestre Febrero 2021 - Junio 2021.\n      </p>\n    </header>\n  );\n}\n\nexport default Presentacion;","import { randomBytes } from 'crypto';\nimport JXGBoard from 'jsxgraph-react-js';\nimport React, { Component } from 'react';\nimport './PrimerPrograma.css';\n\n/**\n * Las coordenadas iniciales para los vectores.\n */\nexport const CoordenadasIniciales: any = {\n  A: [2, 2],\n  B: [-2, 2],\n  C: [-2, -2],\n  D: [2, -2],\n  R: [0, 0]\n};\n\n/**\n * El primer programa de la materia.\n */\nclass PrimerPrograma extends Component {\n\n  // Definición del estado inicial.\n  state = {\n    a: 1,\n    b: 1,\n    c: 1,\n    d: 1,\n    A: [2, 2],\n    B: [-2, 2],\n    C: [-2, -2],\n    D: [2, -2],\n    R: [0, 0],\n  }\n\n  // Constructor de la clase.\n  constructor(props: any) {\n    super(props);\n  }\n\n  logica = (brd: any) => {\n    // Extraemos las variables del estado.\n    let { A, B, C, D, R } = this.state;\n\n    // Suspendemos la actualización del chart.\n    brd.suspendUpdate();\n\n    // Graficamos las leyendas para cada vector.\n    let puntoA = brd.create('point', A, { size: 0, name: 'A' });\n    let puntoB = brd.create('point', B, { size: 0, name: 'B' });\n    let puntoC = brd.create('point', C, { size: 0, name: 'C' });\n    let puntoD = brd.create('point', D, { size: 0, name: 'D' });\n    let puntoR = brd.create('point', R, { size: 0, name: 'R' });\n\n    // Graficamos los vectores.\n    let vecA = brd.create('line', [[0, 0], A], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue',\n      name: 'A'\n    });\n    let vecB = brd.create('line', [[0, 0], B], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n    let vecC = brd.create('line', [[0, 0], C], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n    let vecD = brd.create('line', [[0, 0], D], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'blue'\n    });\n\n    let resultante = brd.create('line', [[0, 0], R], {\n      straightFirst: false,\n      straightLast: false,\n      lastArrow: true,\n      strokeColor: 'red'\n    });\n\n    // Reanudamos la actualización del chart.\n    brd.unsuspendUpdate();\n  }\n\n  actualizarCampo = (e: any) => {\n    this.setState(state => {\n      // Creamos el nuevo estado.\n      const nuevoEstado: any = state;\n\n      // Asignamos el valor que puso el usuario.\n      nuevoEstado[e.target.name] = Number(e.target.value);\n\n      // Calculamos el valor para el vector correspondiente.\n      nuevoEstado[e.target.name.toUpperCase()] = [\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][0],\n        e.target.value * CoordenadasIniciales[e.target.name.toUpperCase()][1]\n      ];\n\n      // Calculamos el nuevo valor para la resultante.\n      nuevoEstado.R[0] = nuevoEstado.A[0] + nuevoEstado.B[0] + nuevoEstado.C[0] + nuevoEstado.D[0];\n      nuevoEstado.R[1] = nuevoEstado.A[1] + nuevoEstado.B[1] + nuevoEstado.C[1] + nuevoEstado.D[1];\n\n\n      // Actualizamos el estado.\n      return ({\n        ...nuevoEstado,\n      })\n    })\n  }\n\n\n  render() {\n    // Hack para forzar a que se actualice la gráfica.\n    let newGraph: string = randomBytes(21).toString();\n\n    // El componente.\n    return (\n      <div className=\"primer-programa\">\n        <h1>Programa #1</h1>\n        <p>\n          Programa que recibe los parámetros <code>a</code>, <code>b</code>, <code>c</code> y\n          <code>d</code> enteros los cuales son aplicados a los vectores iniciales <code>A({CoordenadasIniciales.A[0]},{CoordenadasIniciales.A[1]})</code>,\n          <code>B({CoordenadasIniciales.B[0]},{CoordenadasIniciales.B[1]})</code>, <code>C({CoordenadasIniciales.C[0]},{CoordenadasIniciales.C[1]})</code> y <code>D({CoordenadasIniciales.D[0]},{CoordenadasIniciales.D[1]})</code>, correspondientemente, y\n          se calcula la resultante (<code>R</code>) de todos ellos y se grafica.\n        </p>\n        <p>\n          <strong>Entradas:</strong>\n          <ul>\n            <li><strong>a</strong>: Un escalar entero.</li>\n            <li><strong>b</strong>: Un escalar entero.</li>\n            <li><strong>c</strong>: Un escalar entero.</li>\n            <li><strong>d</strong>: Un escalar entero.</li>\n          </ul>\n        </p>\n        <hr></hr>\n        <p>Valores para el programa:</p>\n        <p>\n          <code>a</code> = <input type=\"number\" name=\"a\" id=\"a\" value={this.state.a} step={1} onChange={this.actualizarCampo} /> = <code>a·A</code> = <code>{this.state.a}·({CoordenadasIniciales.A[0]},{CoordenadasIniciales.A[1]})</code> = <code>({this.state.A[0]},{this.state.A[1]})</code>\n        </p>\n        <p>\n          <code>b</code> = <input type=\"number\" name=\"b\" id=\"b\" value={this.state.b} step={1} onChange={this.actualizarCampo} /> = <code>b·B</code> = <code>{this.state.b}·({CoordenadasIniciales.B[0]},{CoordenadasIniciales.B[1]})</code> = <code>({this.state.B[0]},{this.state.B[1]})</code>\n        </p>\n        <p>\n          <code>c</code> = <input type=\"number\" name=\"c\" id=\"c\" value={this.state.c} step={1} onChange={this.actualizarCampo} /> = <code>c·C</code> = <code>{this.state.c}·({CoordenadasIniciales.C[0]},{CoordenadasIniciales.C[1]})</code> = <code>({this.state.C[0]},{this.state.C[1]})</code>\n        </p>\n        <p>\n          <code>d</code> = <input type=\"number\" name=\"d\" id=\"d\" value={this.state.d} step={1} onChange={this.actualizarCampo} /> = <code>d·D</code> = <code>{this.state.d}·({CoordenadasIniciales.D[0]},{CoordenadasIniciales.D[1]})</code> = <code>({this.state.D[0]},{this.state.D[1]})</code>\n        </p>\n        <p>\n          Resultante = <code>R</code> = <code>aA + bB + cC + dD</code> = <code>({this.state.A[0]},{this.state.A[1]}) + ({this.state.B[0]},{this.state.B[1]}) + ({this.state.C[0]},{this.state.C[1]}) + ({this.state.D[0]},{this.state.D[1]})</code> = <code>({this.state.R[0]},{this.state.R[1]})</code>\n        </p>\n        <JXGBoard\n          key={newGraph}\n          className=\"grafica\"\n          logic={this.logica}\n          boardAttributes={{\n            axis: true,\n            boundingbox: [-20, 20, 20, -20],\n            showCopyright: false,\n          }}\n          style={{\n            border: '1px solid black'\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PrimerPrograma;\n","import React from 'react';\nimport Footer from '../Footer/Footer';\nimport Presentacion from '../Presentacion/Presentacion';\nimport PrimerPrograma from '../PrimerPrograma/PrimerPrograma';\n// import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Presentacion />\n      <PrimerPrograma />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}